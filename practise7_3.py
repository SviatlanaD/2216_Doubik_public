"""
Реализовать программу работы с органическими клетками, состоящими из ячеек.
Необходимо создать класс Клетка.
Параметры - соответствующий количеству ячеек клетки (целое число)
Методы перегрузки арифметических операторов:
    сложение (__add__()). Объединение двух клеток.
        При этом число ячеек общей клетки должно равняться сумме ячеек исходных двух клеток.
    вычитание (__sub__()). Участвуют две клетки.
        Операцию необходимо выполнять только если разность количества ячеек двух клеток больше нуля,
        иначе выводить соответствующее сообщение.
    умножение (__mul__()). Создаётся общая клетка из двух.
        Число ячеек общей клетки определяется как произведение количества ячеек этих двух клеток.
    деление (__truediv__()) Создаётся общая клетка из двух.
        Число ячеек общей клетки определяется как целочисленное деление количества ячеек этих двух клеток.

В классе необходимо реализовать метод make_order(), принимающий экземпляр класса и количество ячеек в ряду.
Данный метод позволяет организовать ячейки по рядам.
Метод должен возвращать строку вида *****\n*****\n*****...,
    где количество ячеек между \n равно переданному аргументу.
Если ячеек на формирование ряда не хватает, то в последний ряд записываются все оставшиеся.

Например, количество ячеек клетки равняется 12, количество ячеек в ряду — 5.
Тогда метод make_order() вернёт строку: *****\n*****\n**.
Или, количество ячеек клетки равняется 15, количество ячеек в ряду — 5.
Тогда метод make_order() вернёт строку: *****\n*****\n*****.
Подсказка: подробный список операторов для перегрузки доступен по ссылке.
"""


class Cell:
    def __init__(self, number):
        self.number = int(number)

    def __add__(self, other):
        return f'Объединение двух клеток - {self.number + other.number} - cумма ячеек исходных двух клеток'

    def __sub__(self, other):
        return f'Вычитание клеток - {self.number - other.number} - разность ячеек исходных двух клеток'\
            if self.number - other.number > 0 else 'Разность количества ячеек меньше либо равна нулю'

    def __mul__(self, other):
        return f'Oбщая клетка из двух - {self.number * other.number} - произведение количества ячеек этих двух клеток'

    def __truediv__(self, other):
        return f'Oбщая клетка из двух - {self.number // other.number} - целочисленное деление количества ячеек'

    def make_order(self, row):
        result = ''
        result_row = int(self.number / row)
        result_last_row = int(self.number % row)
        for i in range(result_row):
            result += '*' * row + '\n'
        result += '*' * result_last_row + '\n'
        return result


c_1 = Cell(12)
c_2 = Cell(15)
print(c_1 + c_2)
print(c_1 - c_2)
print(c_2 - c_1)
print(c_1 * c_2)
print(c_1 / c_2)
print(c_1.make_order(5))

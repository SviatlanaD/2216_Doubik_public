"""
3. Создайте собственный класс-исключение,
который должен проверять содержимое списка на наличие только чисел
Проверить работу исключения на реальном примере
Запрашивать у пользователя данные и заполнять список необходимо только числами
Класс-исключение должен контролировать типы данных элементов списка.

Примечание: длина списка не фиксирована
Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта,
введя, например, команду «stop».
При этом скрипт завершается, сформированный список с числами выводится на экран.
Подсказка: для этого задания примем, что пользователь может вводить только числа и строки.
Во время ввода пользователем очередного элемента необходимо реализовать проверку типа элемента.
Вносить его в список, только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение
При этом работа скрипта не должна завершаться.
"""


class ErrorTxt(Exception):
    def __init__(self):
        pass


class Data:
    def __init__(self):
        self.list_data = []

    def type_checkin(self):
        while True:
            try:
                try:
                    data = int(input('Введите число: '))
                    answ = input(f'Хотите продолжить? y/n: ')
                    self.list_data.append(data)
                    if answ == 'n':
                        print(self.list_data)
                        break
                except ValueError:
                    raise ErrorTxt
            except ErrorTxt:
                answ = input('Введенная информация не соответствует type (int). '
                             'Хотите продолжить? y/n: ')
                if answ == 'n':
                    print(self.list_data)
                    break
                else:
                    self.type_checkin()


d = Data()
d.type_checkin()
